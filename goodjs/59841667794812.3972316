define("modules/lazyload",["jquery_visible","jquery"],function(t,c){var e={setSrcSet:function(i,a){return function(){function t(){var t=(t=e.getAttribute("srcset"))||e.getAttribute("data-srcset");e.setAttribute("srcset",t.replace(new RegExp(i,"gi"),""))}var e=this;a&&a.applyImmediate?t():requestAnimationFrame(t)}},setImgSrc:function(n,e){return function(){function t(){var t=a.attr("src");t&&!t.match(/^data:image\//g)||(t=i.getAttribute("data-src")),a.data("lazyEffects")||a.data("lazyEffects",n);var e=a.data("lazyEffects");a.attr("src",t.replace(new RegExp(e,"gi"),""))}var i=this,a=c(this);e&&e.applyImmediate?t():requestAnimationFrame(t)}},handleLazyCollection:function(t,i){if(t.length){i=i||{};var a,n=this;return t.each(function(){var t,e=c(this);(i.skipVisibilityCheck||e.visible(!0,!1,"both"))&&(a=a?a.add(e):e,t=this.getAttribute("is-lazy"),e.find("img").each(n.setImgSrc(t,i)),e.find("source").each(n.setSrcSet(t,i)))}),a&&a.length&&(window.picturefill&&window.picturefill({reevaluate:!0,elements:a.toArray()}),a.removeAttr("is-lazy"),a.attr("is-loaded","true")),t}},manageLazyness:function(){var t=this;t.animationFrame=requestAnimationFrame(function(){t.handleLazyCollection(t.$lazyCollection),t.animationFrame=requestAnimationFrame(t.init.bind(t))})},$lazyCollection:void 0,animationFrame:void 0,init:function(){var t,l=this;l.$lazyCollection=c("*[is-lazy]"),"IntersectionObserver"in window?(t=new window.IntersectionObserver(function(t,e){for(var i=0,a=t.length;i<a;i++){var n,r,s,o=t[i];o.isIntersecting&&(n=c(o.target),r=r?r.add(n):n,o=(s=o.target).getAttribute("is-lazy"),n.find("img").each(l.setImgSrc(o)),n.find("source").each(l.setSrcSet(o)),e.unobserve(s))}r&&r.length&&(window.picturefill&&window.picturefill({reevaluate:!0,elements:r.toArray()}),r.removeAttr("is-lazy"),r.attr("is-loaded","true"))}),l.$lazyCollection.each(function(){t.observe(this)})):l.manageLazyness()},refresh:function(){this.init()}};return e.init(),window.lazyLoadHelper=e});
