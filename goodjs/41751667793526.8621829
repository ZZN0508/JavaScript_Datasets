YUI.add("flickr-notifications-markread-updater",function(i,n){"use strict";i.namespace("ModelUpdaters")["flickr-notifications-markread"]={run:function(t,e){return e.callAPI("flickr.notifications.markread",t).then(null,i.FetcherErrorLogger(n))}}},"@VERSION@",{requires:["flickr-promise"]}),YUI.add("flickr-activity-getNotificationsCount-fetcher",function(r,o){"use strict";r.namespace("ModelFetchers")["flickr-activity-getNotificationsCount"]={run:function(t,e){var i=this,n=this._processParams(t);return r.FlickrPromise({apiResponse:e.callAPI("flickr.activity.getNotificationsCount",n),personNotifsModelRegistry:e.getModelRegistry("person-notifications-models")}).then(function(t){return i._processResponse(t,e,n)},r.FetcherErrorLogger(o))},_processParams:function(t){var e=t.notification_groups||"default,hermes_2020,groups_you_admin";return r.merge(t,{notification_groups:e})},_processResponse:function(t,e,i){var n=t.apiResponse,r=t.personNotifsModelRegistry,t=r.getValue(i.id,"unseenNotificationCounts")||{};return r.setValue(i.id,"unseenNotificationCount",n.activity.count),r.setValue(i.id,"unseenNotificationCounts",Object.assign(t,n.activity)),n.activity.count}}},"@VERSION@",{requires:["flickr-promise"],optional:["person-notifications-models","api-helper"]}),YUI.add("flickr-activity-muteObject-updater",function(i,n){"use strict";i.namespace("ModelUpdaters")["flickr-activity-muteObject"]={run:function(t,e){return e.callAPI("flickr.activity.muteObjectByType",t).then(null,i.FetcherErrorLogger(n))}}},"@VERSION@",{requires:["flickr-promise"]}),YUI.add("flickr-activity-unmuteObject-updater",function(i,n){"use strict";i.namespace("ModelUpdaters")["flickr-activity-unmuteObject"]={run:function(t,e){return e.callAPI("flickr.activity.unmuteObjectByType",t).then(null,i.FetcherErrorLogger(n))}}},"@VERSION@",{requires:["flickr-promise"]}),YUI.add("person-notifications-models",function(i){function e(t){e.superclass.constructor.call(this,t)}i.Models[this.name]=e,i.extend(e,i.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return i.ModelFetchers["flickr-people-getInfo"].run(t,this.appContext)},readUnseenNotificationCount:function(t,e){return i.ModelFetchers["flickr-activity-getNotificationsCount"].run(t,e)},updateMutedObjects:function(t,e){return i.ModelUpdaters["flickr-activity-muteObject"].run(t,e)},updateUnmutedObjects:function(t,e){return i.ModelUpdaters["flickr-activity-unmuteObject"].run(t,e)}},remoteReadUnseenNotificationCount:function(t,e,i){return this.setValue(t,"unseenLastFetchedTimestamp",Date.now()),this.remote.readUnseenNotificationCount(e,i)},remoteUpdateMutedObjects:function(e,t,i){var n=this;return this.remote.updateMutedObjects(t,i).then(function(t){return n.setValue(e,"muteChanged",!0),t})},remoteUpdateUnmutedObjects:function(e,t,i){var n=this;return this.remote.updateUnmutedObjects(t,i).then(function(t){return n.setValue(e,"muteChanged",!0),t})},getNotificationsByContinuation:function(t,e){t=Object.assign(e,{id:t});return i.ListFetchers["flickr-activity-recentByType"].run(t,this.appContext)},attributes:{id:{setter:function(t){return t||this.appContext.getViewer().nsid}},unseenNotificationCount:{validator:function(t){return i.AttributeHelpers.validateInteger(t)},setter:function(t){return i.AttributeHelpers.coerceInteger(t)},defaultValue:0},unseenNotificationCounts:{},unreadFlickrMailCount:{validator:function(t){return i.AttributeHelpers.validateInteger(t)},setter:function(t){return i.AttributeHelpers.coerceInteger(t)},defaultValue:0},unseenLastFetchedTimestamp:{validator:function(t){return i.AttributeHelpers.validateInteger(t)},setter:function(t){return i.AttributeHelpers.coerceInteger(t)},defaultValue:0},muteChanged:{validator:function(t){return i.AttributeHelpers.validateBoolean(t)},setter:function(t){return i.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},notifications:{isCollection:!0,pageFetch:{listFetcher:i.ListFetchers["flickr-activity-recentByType-OLD"]}},initialNotificationsData:{}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-activity-recentByType-fetcher","flickr-activity-recentByType-OLD-fetcher","flickr-notifications-markread-updater","flickr-people-getInfo-fetcher","flickr-activity-getNotificationsCount-fetcher","flickr-activity-muteObject-updater","flickr-activity-unmuteObject-updater","attribute-helpers"]}),YUI.add("flickr-activity-recentByType-fetcher",function(l,t){"use strict";l.namespace("ListFetchers")["flickr-activity-recentByType"]={run:function(e,i){var n=this,r=this._processParams(e);return new l.FlickrPromise({apiResponse:i.callAPI("flickr.activity.recentByType",r),notificationModelRegistry:i.getModelRegistry("notification-models"),notificationsModelRegistry:i.getModelRegistry("person-notifications-models")}).then(function(t){return n._processResponse(t,e,r,i)},l.FetcherErrorLogger(t))},_processParams:function(t){var e={extras:["sizes","icon_urls","ignored","rev_ignored","tags","autotags","datecreate"].join(",")+","+l.APIHelper.request.getRebootPhotoExtras(),count:30,per_object:12,max_users:2,notification_groups:t.notificationGroups||"default"};return t.muteFilter&&(e.mute_filter=t.muteFilter),t.onlyGroupId&&(e.only_group_id=t.onlyGroupId),"continuation"in t?e.continuation=t.continuation:"page"in t&&(e.page=t.page,e.per_page=t.perPage),e},_processResponse:function(t,o,a,e){var s=t.apiResponse,n=t.notificationModelRegistry,c=t.notificationsModelRegistry,r=[],u=new l.NotificationsHelper(e);return s.items?(s.items.item.forEach(function(e){var i=e.events||[],t={id:l.guid(),isSeen:1===e.seen||!0===e.seen,isMuted:1===e.is_muted,type:e.type,timestamp:e.date,activityData:e,eventDataList:i};r.push(u.extractEntitiesFromResponse(t).then(function(t){t={id:e.id,isSeen:1===e.seen||!0===e.seen,isMuted:1===e.is_muted,type:e.type,timestamp:e.date,activityData:e,eventDataList:i,userModels:t.userModels,activityEntityModels:t.activityEntityModels,eventEntityModelsList:t.eventEntityModelsList};return n.addOrUpdate(t)}))}),l.Promise.all(r).then(function(t){var e,i,n,r={id:o.id};return"continuation"in a?(e=c.addOrUpdate(r),"0"===a.continuation&&(i=e.getValue("initialNotificationsData")||{},n="notificationGroups="+o.notificationGroups,o.muteFilter&&(n+="&muteFilter="+o.muteFilter),o.onlyGroupId&&(n+="&onlyGroupId="+o.onlyGroupId),i[n]=i[n]||{token:s.continuation,list:t},e.setValue("initialNotificationsData",i)),{notificationModels:t,continuation:s.continuation}):"page"in a?(c.exists(o.id)?c.getValue(o.id,"notifications").addPage({page:a.page,perPage:a.per_page,pageContent:t,totalItems:parseInt(s.items.total||0,10)}):(r.notifications=t,c.add(r)),t):void 0})):l.Promise.resolve(Object.assign(s,{notificationModels:[]}))}}},"@VERSION@",{requires:["flickr-promise","search-helper","querystring-parse-simple"],optional:["url-helper","notification-models","person-notifications-models","contact-models","photo-models","notification-models"]});
