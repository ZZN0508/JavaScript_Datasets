YUI.add("af-applet-model",function(r){"use strict";var c=r.Af.Bootstrap,t=r.Af.Config,g=r.Af.Utils,l=r.Lang,u="context",p="data",d="guid",o="settings",f=["crumb","locdrop_crumb","lang","region"],h=g.perfStart,m=g.perfStop,y=t.get(u),x=t.get("transport");r.namespace("Af").AppletModel=r.Base.create("AfAppletModel",r.Model,[r.Mjata.JSON,r.Af.Sync],{idAttribute:d,settingsOpts:{critical:!1},settingsResource:"applet.settings",initializer:function(){var t=c.getMeta(this.get(d))||{},e={},n={silent:!0},s=this.get("type"),i={},a=r.merge(y,t.context),o=this;this.set(u,a,{silent:!0}),this.syncContext={config:r.merge(x,t.transport,{beaconMeta:{_appletType:s||""}}),context:{_appletType:s||""}},r.Array.forEach(f,function(t){a[t]&&(o.syncContext.context[t]=a[t])}),t.applet_type&&(i.applet_type=t.applet_type),t.i13n&&(i.i13n=t.i13n),t.i18n=r.merge(g.i18n("ape-applet/strings"),t.i18n),i.i18n=t.i18n,i.intl={locales:a.lang,messages:t.i18n},t.models&&(e=t.models.applet_model||{}),r.each(["config","data","state"],function(t){e[t]&&(i[t]=e[t])}),(e.settings||e.user_settings)&&(i.settings=e.settings||e.user_settings),this.setAttrs(i,n),e.models&&(h(t=s+":aptCreateDataModels"),r.Array.each(e.models,function(t){var e=c.createModel(this.get(d),t),s=this.get(p);e&&s&&(l.isObject(s[t])&&e.setAttrs(s[t],n),this.addDataModel(t,e))},this),m(t)),this.settingsResource="settings."+(i.applet_type||s)},addDataModel:function(t,e){e&&(((this.get(p)[t]=e)._isYUIModel||e._isYUIModelList)&&(e.syncContext=this.syncContext,e.after(["*:change","reset","add","remove"],function(t){var e=r.merge(this.get(p));this.set(p,e,{submodel_evt:t})},this)))},getDataModel:function(t){return this.get(p)[t]},loadDataModel:function(s,t,n){var e,i=this;t=r.merge({resource:s},t),e={context:r.merge(i.syncContext.context,t.context&&t.context.context),config:r.merge(i.syncContext.config,t.context&&t.context.config)},r.Af.Transport.read(t.resource,t.params,e,function(t,e){return!t&&e&&i.set(p+"."+s,e),n&&n(t,e)})},setConfig:function(t,e){this.set("config."+t,e)},getSettings:function(){return this.get(o)},saveSettings:function(e,t,s){var n,i=this.get(o),a=this;if(r.Lang.isFunction(t)&&(s=t,t=null),s=s||g.noop,e=r.merge(i,e),void 0===(t=r.merge(this.settingsOpts,t)).critical&&(t.critical=this.settingsOpts.critical),g.objectEqual(i,e))s(null,e);else{if(n={resource:this.settingsResource,params:{guid:this.get(d)},body:e},i=g.userSignedIn(),!t.critical)return this.set(o,e),s(null,e),void(i&&this.save(n));i?this.save(n,function(t){t?s("ERR_SAVE_SETTINGS"):(a.set(o,e),s(null,e))}):s("ERR_AUTH")}}},{ATTRS:{guid:{},type:{},config:{value:{}},settings:{},user_settings:{getter:function(){return this.get(o)}},context:{value:{}},state:{value:{}},data:{value:{}}}})},"@VERSION@",{langBundles:["strings"],requires:["af-bootstrap","af-config","af-sync","base-build","mjata-json","model"]});
