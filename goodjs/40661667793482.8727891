(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{Z4DO:function(e,n,a){"use strict";var t=a("D57K"),i=a("Hafb"),c=new Map,s=new Map,u=!0,l=!1;function f(e){return e.replace(/[\s,]+/g," ").trim()}function r(e){var r,o,n=f(e);if(!c.has(n)){var e=Object(i.a)(e,{experimentalFragmentVariables:l});if(!e||"Document"!==e.kind)throw new Error("Not a valid GraphQL document.");c.set(n,function(e){var a=new Set(e.definitions);a.forEach(function(n){n.loc&&delete n.loc,Object.keys(n).forEach(function(e){e=n[e];e&&"object"==typeof e&&a.add(e)})});var n=e.loc;return n&&(delete n.startToken,delete n.endToken),e}((e=e,r=new Set,o=[],e.definitions.forEach(function(e){var n,a,t;"FragmentDefinition"===e.kind?(n=e.name.value,a=f((t=e.loc).source.body.substring(t.start,t.end)),(t=s.get(n))&&!t.has(a)?u&&console.warn("Warning: fragment with name "+n+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):t||s.set(n,t=new Set),t.add(a),r.has(a)||(r.add(a),o.push(e))):o.push(e)}),Object(t.a)(Object(t.a)({},e),{definitions:o}))))}return c.get(n)}function o(a){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var t=(a="string"==typeof a?[a]:a)[0];return e.forEach(function(e,n){e&&"Document"===e.kind?t+=e.loc.source.body:t+=e,t+=a[n+1]}),r(t)}var d=o,m=function(){c.clear(),s.clear()},p=function(){u=!1},h=function(){l=!0},b=function(){l=!1};(a=o=o||{}).gql=d,a.resetCaches=m,a.disableFragmentWarnings=p,a.enableExperimentalFragmentVariables=h,a.disableExperimentalFragmentVariables=b,o.default=o,n.a=o}}]);
