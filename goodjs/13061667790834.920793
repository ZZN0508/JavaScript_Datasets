!function(){function e(){c=[],o=-1,a=null,i(addEventListener)}function s(e,t){a||(a=t,o=e,r=new Date,i(removeEventListener),n())}function n(){var t;0<=o&&o<r-l&&(t={entryType:"first-input",name:a.type,target:a.target,cancelable:a.cancelable,startTime:a.timeStamp,processingStart:a.timeStamp+o},c.forEach(function(e){e(t)}),c=[])}function i(t){["mousedown","keydown","touchstart","pointerdown"].forEach(function(e){return t(e,d,p)})}var a,o,r,c,p={passive:!0,capture:!0},l=new Date,d=function(e){var t,n,i,a;function o(){s(n,i),a()}function r(){a()}e.cancelable&&(t=(1e12<e.timeStamp?new Date:performance.now())-e.timeStamp,"pointerdown"==e.type?(n=t,i=e,a=function(){removeEventListener("pointerup",o,p),removeEventListener("pointercancel",r,p)},addEventListener("pointerup",o,p),addEventListener("pointercancel",r,p)):s(t,e))},u="hidden"===document.visibilityState?0:1/0;addEventListener("visibilitychange",function e(t){"hidden"===document.visibilityState&&(u=t.timeStamp,removeEventListener("visibilitychange",e,!0))},!0),e(),self.webVitals={firstInputPolyfill:function(e){c.push(e),n()},resetFirstInputPolyfill:e,get firstHiddenTime(){return u}}}(),window.__twilightApproximatedFirstPaint=performance.now();try{var defaultSpadeEndpoint="https://spade.twitch.tv/track";window.__twilightBuildID="c5fa6318-2b89-4847-b033-17a2335e5a13";for(var entries=document.cookie.split("; "),cookies={},i=entries.length-1;0<=i;i--){var entry=entries[i].split("=",2);cookies[entry[0]]=entry[1]}function fetchlike(n){return"function"==typeof fetch?fetch("https://gql.twitch.tv/gql",n):new Promise(function(e,t){var i=new XMLHttpRequest;i.open("POST","https://gql.twitch.tv/gql"),Object.keys(n.headers).forEach(function(e){try{i.setRequestHeader(e,n.headers[e])}catch(e){console.error(e)}}),i.withCredentials="include"===n.credentials,i.onerror=t,i.onload=function(){var n={status:i.status,statusText:i.statusText,body:i.response||i.responseText,ok:200<=i.status&&i.status<300,json:function(){return new Promise(function(e,t){try{e(JSON.parse(n.body))}catch(e){t(e)}})}};e(n)},i.send(n.body)})}var vodID,channelName,authorization=cookies["auth-token"]?"OAuth "+cookies["auth-token"]:void 0,commonOptions={method:"POST",headers:{"Accept-Language":"en-US",Accept:"*/*",Authorization:authorization,"Client-ID":"kimne78kx3ncx6brgo4mv6wki5h1ko","Content-Type":"text/plain; charset=UTF-8","Device-ID":cookies.unique_id}},playerType="site",playerRoutesExact=window.__twilightSettings&&window.__twilightSettings.player_routes_exact||[],playerRoutesStartsWith=window.__twilightSettings&&window.__twilightSettings.player_routes_startswith||[],pathname=window.location.pathname.substr(1);-1===playerRoutesExact.indexOf(pathname)&&0===playerRoutesStartsWith.filter(function(e){return pathname.startsWith(e)}).length&&(pathname.startsWith("videos/")?vodID=(vodID=pathname.replace("videos/","").replace(/\//g,"")).startsWith("v")?vodID.substr(1):vodID:channelName=pathname.replace(/\//g,""));var body,query='query PlaybackAccessToken_Template($login: String!, $isLive: Boolean!, $vodID: ID!, $isVod: Boolean!, $playerType: String!) {  streamPlaybackAccessToken(channelName: $login, params: {platform: "web", playerBackend: "mediaplayer", playerType: $playerType}) @include(if: $isLive) {    value    signature    __typename  }  videoPlaybackAccessToken(id: $vodID, params: {platform: "web", playerBackend: "mediaplayer", playerType: $playerType}) @include(if: $isVod) {    value    signature    __typename  }}',bodyBase={operationName:"PlaybackAccessToken_Template",query:query};vodID?(body=JSON.stringify(Object.assign({},bodyBase,{variables:{isLive:!1,login:"",isVod:!0,vodID:vodID,playerType:playerType}})),window.__vat={contentType:"vod",id:vodID,playerType:playerType,request:fetchlike(Object.assign({},commonOptions,{body:body}))}):channelName&&(body=JSON.stringify(Object.assign({},bodyBase,{variables:{isLive:!0,login:channelName,isVod:!1,vodID:"",playerType:playerType}})),window.__vat={contentType:"live",id:channelName,playerType:playerType,request:fetchlike(Object.assign({},commonOptions,{body:body}))});var blob=new Blob(["data="+encodeURIComponent(btoa(JSON.stringify({event:"benchmark_template_loaded",properties:{app_version:window.__twilightBuildID,benchmark_server_id:cookies.server_session_id,client_time:Date.now()/1e3,device_id:cookies.unique_id,duration:Math.round(performance.now()),url:location.protocol+"//"+location.hostname+location.pathname+location.search}})))],{type:"application/x-www-form-urlencoded; charset=UTF-8"}),req=new XMLHttpRequest;req.open("POST",window.__twilightSettings&&window.__twilightSettings.spade_url||defaultSpadeEndpoint,!0),req.send(blob)}catch(e){console.error("Error in bootstrap script:",e)}
