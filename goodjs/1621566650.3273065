define([],(function(){function t(){this._init()}function n(t,n){return{context:t,handler:n,once:!1}}return t.prototype={_init:function(){this.list=[]},_callHandler:function(t,n,i){return t.call(n,i),this},trigger:function(t){for(var n=this,i=n.list.slice(),e=arguments[1],r=[],c=0,s=i.length;c<s;c++){var h=i[c];h&&(h.once&&r.push(h),n._callHandler(h.handler,h.context,t,e))}return r.forEach((function(t){var i=n.list.indexOf(t);-1!==i&&n.list.splice(i,1)})),n},attach:function(t,i){return this.list.push(n(i,t)),this},attachOnce:function(t,i){var e=n(i,t);return e.once=!0,this.list.push(e),this},detach:function(t,n){for(var i=this.list,e=i.length;e-- >0;){var r=i[e];r.handler===t&&r.context===n&&i.splice(e,1)}return this},hasHandlers:function(){return 0!==this.list.length},switchListener:function(t,n,i){return t?this.attach(n,i):this.detach(n,i)}},{OkEvent:t,create:function(){return new t}}}));